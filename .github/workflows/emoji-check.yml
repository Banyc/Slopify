name: Emoji Check

on:
  workflow_dispatch:  # Manual trigger for testing
  push:
    branches: [ main, master ]  # Check commits pushed to main branches
  pull_request_target:  # Safely handle PRs from forks
    types: [opened, edited, synchronize, reopened]
  pull_request:  # Handle PRs from this repo
    types: [opened, edited, synchronize, reopened]

jobs:
  check-emoji:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write  # Needed to block PRs
      contents: write      # Needed to check/update commits
      statuses: write     # Needed to update commit statuses
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Get all commits

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install emoji-regex

      - name: Check PR title for emoji
        if: github.event_name == 'pull_request' || github.event_name == 'pull_request_target'
        uses: actions/github-script@v7
        with:
          script: |
            const emojiRegex = require('emoji-regex');
            const regex = emojiRegex();
            
            const title = context.payload.pull_request.title;
            if (!regex.test(title)) {
              // Create check run for better visibility
              await github.rest.checks.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                name: 'PR Title Emoji Check',
                head_sha: context.payload.pull_request.head.sha,
                status: 'completed',
                conclusion: 'failure',
                output: {
                  title: 'Missing Emoji in PR Title',
                  summary: `PR title must include an emoji! Current title: "${title}"`,
                  text: `Examples of good PR titles:
                  ‚ú® Add new feature
                  üêõ Fix login bug
                  üé® Update styles
                  
                  Suggested emojis:
                  ‚ú® New feature    üêõ Bug fix      üé® UI/Style
                  üöÄ Performance   üß± Infrastructure
                  ‚ôªÔ∏è Refactor      üîß Configuration
                  üìù Documentation üîí Security
                  üß™ Testing       ‚ö°Ô∏è Improvement`
                }
              });
              
              // Block PR from being merged
              await github.rest.pulls.createReview({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: context.payload.pull_request.number,
                event: 'REQUEST_CHANGES',
                body: '‚ùå PR title must include an emoji!'
              });
              
              core.setFailed('PR title must include an emoji!');
            } else {
              console.log(`‚úÖ PR title "${title}" contains an emoji`);
              // Approve if emoji is present
              await github.rest.pulls.createReview({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: context.payload.pull_request.number,
                event: 'APPROVE',
                body: '‚úÖ PR title contains an emoji!'
              });
            }

      - name: Check commit messages
        uses: actions/github-script@v7
        with:
          script: |
            const emojiRegex = require('emoji-regex');
            const regex = emojiRegex();
            
            let commits;
            if (context.eventName === 'push') {
              commits = context.payload.commits.map(commit => ({
                commit: { message: commit.message },
                sha: commit.id
              }));
            } else {
              const prCommits = await github.rest.pulls.listCommits({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: context.payload.pull_request.number
              });
              commits = prCommits.data;
            }
            
            let hasInvalidCommit = false;
            for (const commit of commits) {
              const message = commit.commit.message.split('\n')[0];
              if (!regex.test(message)) {
                hasInvalidCommit = true;
                
                // Create detailed check for each invalid commit
                await github.rest.checks.create({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  name: 'Commit Message Emoji Check',
                  head_sha: commit.sha,
                  status: 'completed',
                  conclusion: 'failure',
                  output: {
                    title: 'Missing Emoji in Commit Message',
                    summary: `Commit ${commit.sha.substring(0, 7)} is missing an emoji`,
                    text: `Current message: "${message}"\n\nPlease add an emoji to the commit message.`
                  }
                });
              }
            }
            
            if (hasInvalidCommit) {
              if (context.eventName === 'pull_request' || context.eventName === 'pull_request_target') {
                // Block PR from being merged
                await github.rest.pulls.createReview({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  pull_number: context.payload.pull_request.number,
                  event: 'REQUEST_CHANGES',
                  body: '‚ùå Some commit messages are missing emojis!'
                });
              }
              
              core.setFailed('‚ùå Some commit messages are missing emojis! Please add an emoji to the beginning of each commit message. For example: "‚ú® Add new feature" or "üêõ Fix bug"');
            } 